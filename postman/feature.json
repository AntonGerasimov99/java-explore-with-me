{
  "info": {
    "_postman_id": "a1775058-e60e-4528-8f14-72e16cc11ef4",
    "name": "feature",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "27536435"
  },
  "item": [
    {
      "name": "Добавление нового пользователя",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"firstuser\",\r\n    \"email\": \"firstuser@user.com\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление нового пользователя 2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"seconduser\",\r\n    \"email\": \"seconduser@user.com\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление новой категории",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"firstcategory\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/categories",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "categories"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление новой категории 2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"secondcategory\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/categories",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "categories"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление нового события",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"annotation\": \"event1 размер должен находиться в диапазоне от\",\r\n    \"category\": \"1\",\r\n    \"description\": \"description размер должен находиться в диапазоне от\",\r\n    \"eventDate\": \"2025-12-12 19:00:00\",\r\n    \"location\": {\r\n        \"lat\": \"115.12345\",\r\n        \"lon\": \"119.12345\"\r\n    },\r\n    \"paid\": \"false\",\r\n    \"participantLimit\": 20,\r\n    \"requestModeration\": false,\r\n    \"title\": \"title\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/1/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "1",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление нового события 2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"annotation\": \"event2  размер должен находиться в диапазоне от\",\r\n    \"category\": \"2\",\r\n    \"description\": \"description  размер должен находиться в диапазоне от\",\r\n    \"eventDate\": \"2025-12-12 19:00:00\",\r\n    \"location\": {\r\n        \"lat\": \"115.12345\",\r\n        \"lon\": \"119.12345\"\r\n    },\r\n    \"paid\": \"false\",\r\n    \"participantLimit\": 20,\r\n    \"requestModeration\": false,\r\n    \"title\": \"title2\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/2/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление нового события 3 (без публикации)",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"annotation\": \"event3  размер должен находиться в диапазоне от\",\r\n    \"category\": \"2\",\r\n    \"description\": \"description  размер должен находиться в диапазоне от\",\r\n    \"eventDate\": \"2025-12-12 19:00:00\",\r\n    \"location\": {\r\n        \"lat\": \"115.12345\",\r\n        \"lon\": \"119.12345\"\r\n    },\r\n    \"paid\": \"false\",\r\n    \"participantLimit\": 20,\r\n    \"requestModeration\": false,\r\n    \"title\": \"title2\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/2/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Подтверждение события 1",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Подтверждение события 2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление комментария к событию 1",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "const target = pm.response.json();\r",
              "pm.test(\"Проверка тела ответа\", function () {\r",
              "    pm.expect(target).to.have.property(\"id\");\r",
              "    pm.expect(target).to.have.property(\"created\");\r",
              "    pm.expect(target).to.have.property(\"event\");\r",
              "    pm.expect(target).to.have.property(\"author\");\r",
              "    pm.expect(target).to.have.property(\"text\");\r",
              "});\r",
              "pm.test(\"Проверка содержания тела ответа\", function () {\r",
              "    pm.expect(target.id).to.not.be.null;\r",
              "    pm.expect(target.event.id).equal(1);\r",
              "    pm.expect(target.author.id).equal(1);\r",
              "    pm.expect(target.text).equal('Create comment from user 1 to event 1');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Create comment from user 1 to event 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Ответ на комментарий 1",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "const target = pm.response.json();\r",
              "pm.test(\"Проверка тела ответа\", function () {\r",
              "    pm.expect(target).to.have.property(\"id\");\r",
              "    pm.expect(target).to.have.property(\"created\");\r",
              "    pm.expect(target).to.have.property(\"event\");\r",
              "    pm.expect(target).to.have.property(\"author\");\r",
              "    pm.expect(target).to.have.property(\"text\");\r",
              "    pm.expect(target).to.have.property(\"replyComment\");\r",
              "});\r",
              "pm.test(\"Проверка содержания тела ответа\", function () {\r",
              "    pm.expect(target.id).to.not.be.null;\r",
              "    pm.expect(target.event.id).equal(1);\r",
              "    pm.expect(target.author.id).equal(2);\r",
              "    pm.expect(target.text).equal('Create reply to comment 1 for event 1');\r",
              "    pm.expect(target.replyComment.id).equal(1);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Create reply to comment 1 for event 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/2/1/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "2",
            "1",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Редактирование комментария 1",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "const target = pm.response.json();\r",
              "pm.test(\"Проверка тела ответа\", function () {\r",
              "    pm.expect(target).to.have.property(\"id\");\r",
              "    pm.expect(target).to.have.property(\"created\");\r",
              "    pm.expect(target).to.have.property(\"event\");\r",
              "    pm.expect(target).to.have.property(\"author\");\r",
              "    pm.expect(target).to.have.property(\"text\");\r",
              "    pm.expect(target).to.have.property(\"edited\");\r",
              "});\r",
              "pm.test(\"Проверка содержания тела ответа\", function () {\r",
              "    pm.expect(target.id).to.not.be.null;\r",
              "    pm.expect(target.event.id).equal(1);\r",
              "    pm.expect(target.author.id).equal(1);\r",
              "    pm.expect(target.edited).equal(true);\r",
              "    pm.expect(target.text).equal('Update comment from user 1 to event 1');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Update comment from user 1 to event 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Редактирование чужого комментария",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 400\", function () {\r",
              "    pm.response.to.have.status(400);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Update comment from user 1 to event 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Удаления комментария 1",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
              "    pm.response.to.have.status(204);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Получение комментария 2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "const target = pm.response.json();\r",
              "pm.test(\"Проверка тела ответа\", function () {\r",
              "    pm.expect(target).to.have.property(\"id\");\r",
              "    pm.expect(target).to.have.property(\"created\");\r",
              "    pm.expect(target).to.have.property(\"event\");\r",
              "    pm.expect(target).to.have.property(\"author\");\r",
              "    pm.expect(target).to.have.property(\"text\");\r",
              "    pm.expect(target).to.have.property(\"replyComment\");\r",
              "});\r",
              "pm.test(\"Проверка содержания тела ответа\", function () {\r",
              "    pm.expect(target.id).to.not.be.null;\r",
              "    pm.expect(target.event.id).equal(1);\r",
              "    pm.expect(target.author.id).equal(2);\r",
              "    pm.expect(target.text).equal('Create reply to comment 1 for event 1');\r",
              "    pm.expect(target.replyComment.id).equal(1);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Получение комментария пользователя 2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/users/2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "users",
            "2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Получение комментариев для события 1",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/events/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "events",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление комментария к не созданному событию",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Comment to not found event\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/5",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "5"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление комментария к не опубликованному событию",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 400\", function () {\r",
              "    pm.response.to.have.status(400);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Comment to not found event\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/3",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "3"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Удаления комментария 2 другим пользователям",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 400\", function () {\r",
              "    pm.response.to.have.status(400);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Удаление несуществующего комментария",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/1/6",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "1",
            "6"
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}
